local library = {}

function library:uiName(titleText)
    local player = game.Players.LocalPlayer
    local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
    gui.Name = "SV_GUI"
    gui.ResetOnSpawn = false

    local main = Instance.new("Frame", gui)
    main.Size = UDim2.new(0, 250, 0, 300)
    main.Position = UDim2.new(0.5, -125, 0.5, -150)
    main.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    main.BorderSizePixel = 0
    main.AnchorPoint = Vector2.new(0.5, 0.5)
    main.Active = true
    main.Draggable = true

    local title = Instance.new("TextLabel", main)
    title.Size = UDim2.new(1, 0, 0, 30)
    title.BackgroundTransparency = 1
    title.Text = titleText or "SV-GUI"
    title.Font = Enum.Font.GothamBold
    title.TextColor3 = Color3.new(1, 1, 1)
    title.TextSize = 18

    local container = Instance.new("ScrollingFrame", main)
    container.Size = UDim2.new(1, -10, 1, -40)
    container.Position = UDim2.new(0, 5, 0, 35)
    container.CanvasSize = UDim2.new(0, 0, 0, 0)
    container.ScrollBarThickness = 4
    container.BackgroundTransparency = 1
    container.AutomaticCanvasSize = Enum.AutomaticSize.Y

    local layout = Instance.new("UIListLayout", container)
    layout.Padding = UDim.new(0, 6)
    layout.SortOrder = Enum.SortOrder.LayoutOrder

    local function makeToggle(name, callback)
        local button = Instance.new("TextButton", container)
        button.Size = UDim2.new(1, 0, 0, 30)
        button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        button.Text = name .. " [OFF]"
        button.Font = Enum.Font.Gotham
        button.TextColor3 = Color3.new(1,1,1)
        button.TextSize = 14
        local state = false
        button.MouseButton1Click:Connect(function()
            state = not state
            button.Text = name .. (state and " [ON]" or " [OFF]")
            pcall(callback, state)
        end)
    end

    local function makeButton(name, callback)
        local button = Instance.new("TextButton", container)
        button.Size = UDim2.new(1, 0, 0, 30)
        button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        button.Text = name
        button.Font = Enum.Font.Gotham
        button.TextColor3 = Color3.new(1,1,1)
        button.TextSize = 14
        button.MouseButton1Click:Connect(function()
            pcall(callback)
        end)
    end

    local function makeSlider(name, min, max, callback)
        local label = Instance.new("TextLabel", container)
        label.Size = UDim2.new(1, 0, 0, 20)
        label.BackgroundTransparency = 1
        label.Text = name .. ": " .. tostring(min)
        label.Font = Enum.Font.Gotham
        label.TextColor3 = Color3.new(1,1,1)
        label.TextSize = 13

        local sliderBack = Instance.new("Frame", container)
        sliderBack.Size = UDim2.new(1, 0, 0, 18)
        sliderBack.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        local sliderFill = Instance.new("Frame", sliderBack)
        sliderFill.BackgroundColor3 = Color3.fromRGB(100, 100, 255)
        sliderFill.Size = UDim2.new(0, 0, 1, 0)
        sliderFill.BorderSizePixel = 0

        local dragging = false
        sliderBack.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                dragging = true
            end
        end)
        sliderBack.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                dragging = false
            end
        end)

        game:GetService("UserInputService").InputChanged:Connect(function(input)
            if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
                local pos = math.clamp((input.Position.X - sliderBack.AbsolutePosition.X) / sliderBack.AbsoluteSize.X, 0, 1)
                sliderFill.Size = UDim2.new(pos, 0, 1, 0)
                local value = math.floor(min + (max - min) * pos)
                label.Text = name .. ": " .. value
                pcall(callback, value)
            end
        end)
    end

    local function makeDropdown(name, items, callback)
        local dropdown = Instance.new("TextButton", container)
        dropdown.Size = UDim2.new(1, 0, 0, 30)
        dropdown.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        dropdown.Text = name .. ": [Select]"
        dropdown.Font = Enum.Font.Gotham
        dropdown.TextColor3 = Color3.new(1,1,1)
        dropdown.TextSize = 14

        local open = false
        local dropItems = {}

        dropdown.MouseButton1Click:Connect(function()
            open = not open
            for _, obj in ipairs(dropItems) do obj:Destroy() end
            dropItems = {}

            if open then
                for _, item in ipairs(items) do
                    local choice = Instance.new("TextButton", container)
                    choice.Size = UDim2.new(1, 0, 0, 25)
                    choice.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
                    choice.Text = "  â†³ " .. item
                    choice.Font = Enum.Font.Gotham
                    choice.TextColor3 = Color3.new(1,1,1)
                    choice.TextSize = 13
                    table.insert(dropItems, choice)

                    choice.MouseButton1Click:Connect(function()
                        dropdown.Text = name .. ": [" .. item .. "]"
                        pcall(callback, item)
                        open = false
                        for _, obj in ipairs(dropItems) do obj:Destroy() end
                        dropItems = {}
                    end)
                end
            end
        end)
    end

    return {
        uiToggle = makeToggle,
        uiButton = makeButton,
        uiSlider = makeSlider,
        uiDropdown = makeDropdown
    }
end

return library
